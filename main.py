#Написать программу, которая:
#- Создаёт случайный список из **20** значений по **4** случайных целых чисел от **-10** до **10**.
#- Находит все уникальные комбинации пар из этих значений и выводит их в виде списка кортежей.
#- Пользователь вводит целое число.
#- Вычисляет количество пар, чья сумма меньше заданного пользователем значения.
import random

# Шаг 1: Генерация списка из 20 кортежей, каждый содержит 4 случайных числа от -10 до 10
random_list = []  # Это пустой список, в который будем добавлять кортежи
for _ in range(20):  # Цикл, который повторится 20 раз (для 20 кортежей)
    # Внутри цикла создаем список из 4 случайных чисел от -10 до 10
    random_numbers = []  # Пустой список, в который будем добавлять 4 случайных числа
    for _ in range(4):  # Вложенный цикл для генерации 4 чисел
        number = random.randint(-10, 10)  # Генерация случайного числа от -10 до 10
        random_numbers.append(number)  # Добавляем сгенерированное число в список random_numbers
    random_list.append(random_numbers)  # Добавляем список random_numbers в список random_list

# Печатаем сгенерированный список для проверки
print("Сгенерированный список кортежей:", random_list)

# Шаг 2: Нахождение уникальных пар кортежей
unique_pairs = []  # Пустой список для хранения уникальных пар
for i in range(len(random_list)):  # Внешний цикл перебирает все элементы в random_list
    for j in range(i + 1, len(random_list)):  # Внутренний цикл перебирает элементы после текущего
        unique_pairs.append((random_list[i], random_list[j]))  # Добавляем пару в список unique_pairs

# Печатаем уникальные пары для проверки
print("\nУникальные пары кортежей:")
for pair in unique_pairs:
    print(pair)

# Шаг 3: Запрос у пользователя целого числа
user_input = int(input("\nВведите целое число: "))  # Получаем ввод пользователя, преобразуем его в целое число

# Шаг 4: Подсчёт пар, чья сумма меньше введенного числа
count = 0  # Счетчик пар, сумма которых меньше введенного числа
for pair in unique_pairs:  # Перебираем все уникальные пары
    # Для каждой пары считаем сумму всех чисел, входящих в два кортежа
    pair_sum = sum(pair[0]) + sum(pair[1])  # Суммируем элементы первого и второго кортежа
    if pair_sum < user_input:  # Если сумма меньше введенного числа
        count += 1  # Увеличиваем счетчик на 1

# Шаг 5: Выводим результат
print(f"\nКоличество пар с суммой меньше {user_input}: {count}")